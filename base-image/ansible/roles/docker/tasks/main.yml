---
  # This playbook installs docker
  # based on https://github.com/dcos/dcos-ansible/blob/master/roles/dcos_requirements/tasks/main.yml
  
- name: Check if docker is already installed
  yum:
    list:
      - docker
      - docker-ce
  # If not installed yum_list_docker.results[*].yumstate != installed
  register: yum_list_docker

- name: "Docker CE (stable) repository (Only non-EL systems)"
  yum_repository:
    name: docker-ce
    description: Docker CE Repository
    baseurl: "https://download.docker.com/linux/centos/7/$basearch/stable"
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
  when: yum_list_docker.results | selectattr("yumstate", "match", "installed") | list | length == 0

- name: "Preinstall containerd.io for docker-ce on CentOS preventing kmem bug"
  yum:
    name: "{{ dcos_containerd_pkg_name }}"
    update_cache: true
    state: present
  when: yum_list_docker.results | selectattr("yumstate", "match", "installed") | list | length == 0

- block:
  - name: "Docker installed"
    yum:
      name: "{{ dcos_docker_pkgs }}"
      update_cache: true
      state: present
    register: dcos_yum_docker_install
    until: dcos_yum_docker_install is success
    retries: 3
    delay: 60
  rescue:
    - name: Output
      fail:
        msg: "ABORTING! Could not install '{{ dcos_docker_pkg_name }}'."
      when: yum_list_docker.results | selectattr("yumstate", "match", "installed") | list | length == 0
  
- name: "Docker running (Only on some platforms)"
  systemd:
    name: "{{ dcos_docker_service_name | default('docker') }}"
    state: started
    enabled: true
  when: "'podman' not in (dcos_docker_service_name | default('docker'))"

- name: "Ensure 'docker' group exists"
  group:
    name: docker
    state: present